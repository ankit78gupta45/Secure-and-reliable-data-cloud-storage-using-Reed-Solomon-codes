/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package securestorage;

import com.dropbox.core.DbxException;
import com.microsoft.azure.storage.StorageException;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.security.InvalidKeyException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ankit Gupta
 */
public class DownloadAndDecode extends javax.swing.JPanel {

    public static final String APP_KEY_1 = "";
    public static final String APP_SECRET_1 = "";
    public static final String ACCESS_TOKEN_1 = "";
    public static final String APP_KEY_2 = "";
    public static final String APP_SECRET_2 = "";
    public static final String ACCESS_TOKEN_2 = "";
    DropBoxUpload dbUpload2;
    //DropBoxUpload dbUpload1;
    AzureUtil azureUtil;
    AmazonUtil amazonUtil ;
    DatabaseUtil dbUtil;  
    ArrayList<String> amazonFiles ;
    ArrayList<String> dropBox1Files ;
    ArrayList<String> dropBox2Files ;
    
    /**
     * Creates new form DownloadAndDecode
     * @throws java.sql.SQLException
     */
    public DownloadAndDecode() throws SQLException, ClassNotFoundException, DbxException, URISyntaxException, InvalidKeyException, StorageException {
        initComponents();
        dbUtil = new DatabaseUtil();
        dbUpload2 = new DropBoxUpload(APP_KEY_2,APP_SECRET_2 , ACCESS_TOKEN_2);
        //dbUpload1 = new DropBoxUpload(APP_KEY_1,APP_SECRET_1 , ACCESS_TOKEN_1);
        azureUtil = new AzureUtil();
        amazonUtil = new AmazonUtil();
        amazonFiles = new ArrayList<String>();
        dropBox1Files=new ArrayList<String>();
        dropBox2Files=new ArrayList<String>();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Files Available for Download : ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data and Checksum pieces on different cloud services: ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select encoded file available" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Microsoft Azure");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("Amazon");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Dropbox");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane5.setViewportView(jTextArea5);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Click to Download file from selected cloud services: ");

        jButton2.setText("Download And Decode");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Message Box :");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox2)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jCheckBox1))))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBox3)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        jTextArea4.enable(false);
        if(!jCheckBox1.isSelected())
            jTextArea4.setText("");
        else if(jComboBox1.getSelectedIndex()==0)
        {
             JOptionPane.showMessageDialog(jComboBox1, "Please choose any file");
        } 
        {    
            // TODO add your handling code here:
               
                    String fileName = jComboBox1.getSelectedItem().toString();
                    ArrayList <String> filesList = new ArrayList<String>();
            try {
                filesList = azureUtil.AzureDirectory(fileName);
            } catch (StorageException ex) {
                Logger.getLogger(DownloadAndDecode.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(DownloadAndDecode.class.getName()).log(Level.SEVERE, null, ex);
            }

                    StringBuilder sb = new StringBuilder("");
                    for(String i : filesList)
                    {
                        
                        //String sub = i.substring(0, fileName.length());
                        //System.out.println(sub);
                   
                        sb.append(i+"\n");
                        dropBox1Files.add(i);
                        
                        
                    }
                    jTextArea4.setText(sb.toString());
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if(jComboBox1.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(jComboBox1, "Please choose any file");
        }
        else
        {
                   double amazonTime = 0, azureTime = 0, dropBoxTime = 0;

            try 
            {
                Integer parts = dbUtil.getParts(jComboBox1.getSelectedItem().toString());
                Integer shards = dbUtil.getShards(jComboBox1.getSelectedItem().toString());
                int totalParts = amazonFiles.size()+dropBox1Files.size()+dropBox2Files.size();
                //System.out.println(parts+" "+ totalParts);
                //System.out.println(amazonFiles+" "+dropBox1Files+" "+dropBox2Files);
                if(totalParts<parts)
                {
                    JOptionPane.showMessageDialog(jComboBox1, "Sorry the original file cannot be retrieved from available parts.");
                }
                else
                {
                    try 
                    {
                        int countAmazon = 0,countAzure = 0,countDropbox = 0;
                        long start1 = System.currentTimeMillis();
                        for(String i : amazonFiles)
                        {
                            new AmazonUtil().downLoadBucketFile(i);
                            countAmazon++;
                        }
                        long end1 = System.currentTimeMillis();
                        amazonTime = amazonTime+(end1 - start1);
                        
                        long start2 = System.currentTimeMillis();
                        for (String i : dropBox2Files)
                        { 
                            dbUpload2.dropboxDownload(i);
                            countDropbox++;
                        }
                        long end2 = System.currentTimeMillis();
                        dropBoxTime = dropBoxTime+(end2 - start2);
                        
                        long start3 = System.currentTimeMillis();
                        for (String i : dropBox1Files)
                        { 
                            azureUtil.azureDownload(i);
                            countAzure++;
                        }
                        long end3 = System.currentTimeMillis();
                        azureTime = azureTime+(end3 - start3);
                        
                       
                        double downloadTime = Math.max(Math.max(amazonTime/countAmazon, azureTime/countAzure) ,dropBoxTime/countDropbox );
        
                        System.out.println("Downloading Time:" + downloadTime);   
                        
                        jTextArea2.setText(new SampleDecoder().decode_file(jComboBox1.getSelectedItem().toString(),parts.toString(),shards.toString()));
                        dbUtil.deleteFileName(jComboBox1.getSelectedItem().toString());
                    } 
                    catch (IOException | DbxException ex) 
                    {
                        Logger.getLogger(DownloadAndDecode.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (StorageException ex) {
                        Logger.getLogger(DownloadAndDecode.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (URISyntaxException ex) {
                        Logger.getLogger(DownloadAndDecode.class.getName()).log(Level.SEVERE, null, ex);
                    }   
                }
            } 
            catch (ClassNotFoundException | SQLException ex) 
            {
                Logger.getLogger(DownloadAndDecode.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
        jTextArea2.setText("");
        jTextArea4.setText("");
        jTextArea5.setText("");
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        
       
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        jTextArea5.enable(false);
        if(!jCheckBox3.isSelected())
            jTextArea5.setText("");
        else if(jComboBox1.getSelectedIndex()==0)
        {
             JOptionPane.showMessageDialog(jComboBox1, "Please choose any file");
        } 
        else
        {    
            // TODO add your handling code here:
            ArrayList <String> filesList = new ArrayList<String>();
            try {
                filesList = dbUpload2.dropBoxListFiles();
            } catch (DbxException | IOException ex) {
                Logger.getLogger(DownloadAndDecode.class.getName()).log(Level.SEVERE, null, ex);
            }
            String fileName = jComboBox1.getSelectedItem().toString();
            StringBuilder sb = new StringBuilder("");
            for(String i : filesList)
            {
                //System.out.println(i+" "+i.length()+" "+fileName+" "+ fileName.length());
                if(i.length()>=fileName.length())
                {
                String sub = i.substring(0, fileName.length());
                if(sub.equalsIgnoreCase(fileName))
                { sb.append(i+"\n");
                    dropBox2Files.add(i);
                }
                }
            }
            jTextArea5.setText(sb.toString());
            
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
         if(!jCheckBox2.isSelected())
            jTextArea1.setText("");
         else if(jComboBox1.getSelectedIndex()==0)
        {
             JOptionPane.showMessageDialog(jComboBox1, "Please choose any file");
        } 
        else
        {    
        ArrayList <String> filesList = amazonUtil.getFiles(jComboBox1.getSelectedItem().toString());
        StringBuilder sb = new StringBuilder("");
        for(String i : filesList)
        {
            sb.append(i+"\n");
            amazonFiles.add(i);
        }
        jTextArea1.setText(sb.toString());
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        try {
            // TODO add your handling code here:
            jComboBox1.setModel(new DefaultComboBoxModel(dbUtil.viewFileDetails()));
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(DownloadAndDecode.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jComboBox1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    // End of variables declaration//GEN-END:variables
}
